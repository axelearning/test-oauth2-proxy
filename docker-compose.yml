services:
  caddy:
    image: caddy:2-alpine
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - internal-service
      - external-service

  internal-service:
    image: nginx:alpine
    container_name: internal-service
    volumes:
      - ./services/internal-html:/usr/share/nginx/html:ro
    networks:
      - app-network
    restart: unless-stopped

  external-service:
    image: nginx:alpine
    container_name: external-service
    volumes:
      - ./services/external-html:/usr/share/nginx/html:ro
    networks:
      - app-network
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: --http-enabled
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  portainer_data:
