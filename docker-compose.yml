networks:
  app-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  portainer_data:

services:

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infrastructure/caddy:/etc/caddy:ro
      - ./logs/caddy:/var/log/caddy
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      - external-service


  external-service:
    image: nginx:alpine
    container_name: external-service
    volumes:
      - ./services/external-html:/usr/share/nginx/html:ro
    networks:
      - app-network
    restart: unless-stopped

  admin-service:
    image: nginx:alpine
    container_name: admin-service
    volumes:
      - ./services/admin-html:/usr/share/nginx/html:ro
    networks:
      - app-network
    restart: unless-stopped

  internal1:
    image: nginx:alpine
    container_name: internal1
    volumes:
      - ./services/internal1-html:/usr/share/nginx/html:ro
    networks:
      - app-network
    restart: unless-stopped

  internal2:
    image: nginx:alpine
    container_name: internal2
    volumes:
      - ./services/internal2-html:/usr/share/nginx/html:ro
    networks:
      - app-network
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: ["--admin-password", "${PORTAINER_ADMIN_PASSWORD}"]
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
    - app-network
    restart: unless-stopped

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    container_name: oauth2-proxy
    command:
      - --config=/etc/oauth2-proxy.cfg
    environment:
      - OAUTH2_PROXY_CLIENT_ID=${GITHUB_CLIENT_ID}
      - OAUTH2_PROXY_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - OAUTH2_PROXY_COOKIE_SECRET=${COOKIE_SECRET}
    volumes:
      - ./infrastructure/oauth2-proxy/oauth2-proxy.cfg:/etc/oauth2-proxy.cfg:ro
    ports:
      - "4180:4180"
    networks:
      - app-network
    restart: unless-stopped
