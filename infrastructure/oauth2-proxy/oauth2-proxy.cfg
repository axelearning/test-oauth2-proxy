## OAuth2 Proxy Configuration
## See: https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview

## <addr>:<port> to listen on for HTTP/HTTPS clients
http_address = "0.0.0.0:4180"

## Are we running behind a reverse proxy? 
reverse_proxy = true

## the OAuth Redirect URL.
redirect_url = "https://admin.axelrasse.com/oauth2/callback"


## Email Domains to allow authentication for (this authorizes any email on this domain)
## for more granular authorization use `authenticated_emails_file`
## To authorize any email addresses use "*"
email_domains = "*"

## OAuth Provider configuration  
provider = "github"
# client_id and client_secret will be provided via environment variables:
# OAUTH2_PROXY_CLIENT_ID and OAUTH2_PROXY_CLIENT_SECRET

## Proxy behavior
# skip_provider_button = true


## Cookie Settings
## cookie_name       - the cookie name
## cookie_secret     - the seed string for secure cookies; should be 16, 24, or 32 bytes
##                   for use with an AES cipher when cookie_refresh or pass_access_token
##                   is set
## cookie_domains    - (optional) cookie domain to force cookies to (ie: .yourcompany.com)
## cookie_expire     - (duration) expire timeframe for cookie
## cookie_refresh    - (duration) refresh the cookie when duration has elapsed after cookie was initially set.
##                   Should be less than cookie_expire; set to 0 to disable.
##                   On refresh, OAuth token is re-validated.
##                   (ie: 1h means tokens are refreshed on request 1hr+ after it was set)
## cookie_secure     - secure cookies are only sent by the browser of a HTTPS connection (recommended)
## cookie_httponly   - httponly cookies are not readable by javascript (recommended)
cookie_name = "_oauth2_proxy"
# cookie_secret will be provided via environment variable:
# OAUTH2_PROXY_COOKIE_SECRET
cookie_secure = false
cookie_domains = "admin.axelrasse.com"
cookie_expire = "24h"
cookie_refresh = "1h"