# Admin Portal - OAuth2 Protected Services
# Provides access to Portainer, internal services, and admin tools
# Requires GitHub OAuth2 authentication via oauth2-proxy

admin.axelrasse.com:80 {
	
	# OAuth2 authentication routes (no auth required for these)
	# Handles GitHub OAuth2 flow
	handle /oauth2/* {
		reverse_proxy oauth2-proxy:4180 {
			header_up X-Real-IP {remote_host}
			header_up X-Forwarded-Uri {uri}
		}
	}

	handle / {
		redir /portal permanent
	}

	# All other routes require authentication
	handle {
		import security_headers
		
		forward_auth oauth2-proxy:4180 {
			uri /oauth2/auth
			header_up X-Real-IP {remote_host}
			
			@error status 401
			handle_response @error {
				redir * https://{host}/oauth2/sign_in
			}
		}
		
		# Portainer - Container management interface
		handle /portainer* {
			uri strip_prefix /portainer
			reverse_proxy portainer:9000 {
				import standard_headers
			}
		}
		
		# Internal service 1
		handle /internal1* {
			uri strip_prefix /internal1
			reverse_proxy internal1:80 {
				import standard_headers
			}
		}
		
		# Internal service 2
		handle /internal2* {
			uri strip_prefix /internal2
			reverse_proxy internal2:80 {
				import standard_headers
			}
		}
		
		# Admin portal root and /portal subpath
		handle /portal* {
			uri strip_prefix /portal
			reverse_proxy admin-service:80 {
				import standard_headers
			}
		}
		
		# User info endpoint - Returns OAuth2 proxy headers as JSON
		handle /user-info.json {
			rewrite * /oauth2/userinfo
			reverse_proxy oauth2-proxy:4180 {
				import standard_headers
			}
		}
		
		# Fallback for any other undefined routes
		handle {
			redir /portal permanent
		}
	}
}